{"version":3,"sources":["components/phonebook/phonebook.module.css","components/phonebook/Form.js","components/phonebook/PhoneList.js","components/phonebook/Filter.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","Container","this","htmlFor","type","pattern","title","required","onChange","id","Component","AddPhoneList","data","onDeleteContact","map","onClick","Filter","onChangeFilter","App","contacts","filter","addContacts","contact","prevState","deleteContact","contactId","changeFilter","getVisibleContact","normFilter","toLowerCase","con","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,+JCGxBC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EACxBE,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAE1BE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAEPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMe,UAAWC,IAAOC,UAAWJ,SAAUK,KAAKR,aAAlD,UACE,2CACA,wBAAOS,QAASD,KAAKjB,YAArB,iBAEE,uBACEmB,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRf,MAAOU,KAAKpB,MAAMC,KAClByB,SAAUN,KAAKb,aACfoB,GAAIP,KAAKjB,iBAGb,wBAAOkB,QAASD,KAAKd,cAArB,UACG,IADH,SAGE,uBACEgB,KAAK,SACLrB,KAAK,SACLS,MAAOU,KAAKpB,MAAME,OAClBwB,SAAUN,KAAKb,aACfoB,GAAIP,KAAKd,mBAGb,wBAAQgB,KAAK,SAAb,gC,GAhDWM,aAsDJ7B,IC1CA8B,EAdM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAC5B,OACE,6BACGD,EAAKE,KAAI,gBAAGL,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACR,+BACE,+BAAOD,IACP,+BAAOC,IACP,wBAAQ+B,QAAS,kBAAMF,EAAgBJ,IAAvC,sBAHOA,SCMFO,EAVA,SAAC,GAA+B,IAA7BxB,EAA4B,EAA5BA,MAAOyB,EAAqB,EAArBA,eACvB,OACE,kCACG,IADH,eAGE,uBAAOb,KAAK,OAAOZ,MAAOA,EAAOgB,SAAUS,QCA3CC,E,4MACJpC,MAAQ,CACNqC,SAAU,GACVC,OAAQ,I,EAGVC,YAAc,SAAAT,GACZ,IAAMU,EAAU,CACdb,GAAIvB,IAAQC,WACZJ,KAAM6B,EAAK7B,KACXC,OAAQ4B,EAAK5B,QAEf,EAAKS,UAAS,SAAA8B,GAAS,MAAK,CAC1BJ,SAAS,CAAEG,GAAH,mBAAeC,EAAUJ,gB,EAIrCK,cAAgB,SAAAC,GACd,EAAKhC,UAAS,SAAA8B,GAAS,MAAK,CAC1BJ,SAAUI,EAAUJ,SAASC,QAAO,SAAAE,GAAO,OAAIA,EAAQb,KAAOgB,U,EAIlEC,aAAe,SAAApC,GACb,EAAKG,SAAS,CAAE2B,OAAQ9B,EAAMC,cAAcC,S,EAG9CmC,kBAAoB,WAClB,MAA6B,EAAK7C,MAA1BsC,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVS,EAAaR,EAAOS,cAC1B,OAAOV,EAASC,QAAO,SAAAU,GAAG,OAAIA,EAAI/C,KAAK8C,cAAcE,SAASH,O,4CAGhE,WACE,OACE,qCACE,cAAC,EAAD,CAAM/B,SAAUK,KAAKmB,cACpBnB,KAAKpB,MAAMqC,SAASa,OACnB,cAAC,EAAD,CACExC,MAAOU,KAAKpB,MAAMsC,OAClBH,eAAgBf,KAAKwB,eAGvB,6BAGF,cAAC,EAAD,CACEd,KAAMV,KAAKyB,oBACXd,gBAAiBX,KAAKsB,uB,GAhDdd,aAuDHQ,ICzDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c27a7c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"phonebook_Container__ZEwO7\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport styles from './phonebook.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.Container} onSubmit={this.handleSubmit}>\n        <h2>Phonebook</h2>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          ></input>\n        </label>\n        <label htmlFor={this.numberInputId}>\n          {' '}\n          Number\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst AddPhoneList = ({ data, onDeleteContact }) => {\n  return (\n    <ul>\n      {data.map(({ id, name, number }) => (\n        <li key={id}>\n          <span>{name}</span>\n          <span>{number}</span>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default AddPhoneList;\n","import React from 'react';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label>\n      {' '}\n      Find contact\n      <input type=\"text\" value={value} onChange={onChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Component } from 'react';\nimport Form from './components/phonebook/Form';\nimport AddPhoneList from './components/phonebook/PhoneList';\nimport shortid from 'shortid';\nimport Filter from './components/phonebook/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContacts = data => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normFilter = filter.toLowerCase();\n    return contacts.filter(con => con.name.toLowerCase().includes(normFilter));\n  };\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.addContacts} />\n        {this.state.contacts.length ? (\n          <Filter\n            value={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n        ) : (\n          <></>\n        )}\n\n        <AddPhoneList\n          data={this.getVisibleContact()}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}